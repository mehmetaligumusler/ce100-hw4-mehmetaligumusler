<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classCryptoLibrary_1_1CryptoLibraryClass" kind="class" language="C#" prot="public">
    <compoundname>CryptoLibrary::CryptoLibraryClass</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classCryptoLibrary_1_1CryptoLibraryClass_1a4d86998e9b76670fb1c5acd79e551139" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int CryptoLibrary.CryptoLibraryClass.KeySizeInBytes</definition>
        <argsstring></argsstring>
        <name>KeySizeInBytes</name>
        <initializer>= 16</initializer>
        <briefdescription>
<para>The size of the encryption key in bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="12" column="21" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="12" bodyend="-1"/>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a15509972e9346c7a5e6c232f726f70c5" compoundref="CryptoLibrary_8cs" startline="26" endline="33">CryptoLibrary.CryptoLibraryClass.CryptoLibraryClass</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCryptoLibrary_1_1CryptoLibraryClass_1aae6f67054dad08c013f826b4a72f5a64" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int CryptoLibrary.CryptoLibraryClass.BlockSizeInBytes</definition>
        <argsstring></argsstring>
        <name>BlockSizeInBytes</name>
        <initializer>= 16</initializer>
        <briefdescription>
<para>The size of the encryption block in bytes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="16" column="21" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="16" bodyend="-1"/>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a1d5051a8aedc22c9d63ee7a5790b3456" compoundref="CryptoLibrary_8cs" startline="180" endline="188">CryptoLibrary.CryptoLibraryClass.CreateBuffer</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" prot="private" static="no" mutable="no">
        <type>readonly byte[]</type>
        <definition>readonly byte [] CryptoLibrary.CryptoLibraryClass.key</definition>
        <argsstring></argsstring>
        <name>key</name>
        <briefdescription>
<para>The encryption key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="20" column="25" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="20" bodyend="-1"/>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a792a8e7f81c52c1ed7f4a7fd3154b454" compoundref="CryptoLibrary_8cs" startline="124" endline="128">CryptoLibrary.CryptoLibraryClass.ComputeHMACSHA1</referencedby>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a15509972e9346c7a5e6c232f726f70c5" compoundref="CryptoLibrary_8cs" startline="26" endline="33">CryptoLibrary.CryptoLibraryClass.CryptoLibraryClass</referencedby>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1acdff87d4c2e885080f766b865ba46a20" compoundref="CryptoLibrary_8cs" startline="210" endline="220">CryptoLibrary.CryptoLibraryClass.DecryptData</referencedby>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1adfd9dade06cc9357174a7119f864de5b" compoundref="CryptoLibrary_8cs" startline="194" endline="204">CryptoLibrary.CryptoLibraryClass.EncryptData</referencedby>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a7a593ae6ea289e5373f0f75f44ede6e0" compoundref="CryptoLibrary_8cs" startline="88" endline="94">CryptoLibrary.CryptoLibraryClass.HOTP</referencedby>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d7b2db00f58940797ed213a52469eaa" compoundref="CryptoLibrary_8cs" startline="42" endline="81">CryptoLibrary.CryptoLibraryClass.TransformFile</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCryptoLibrary_1_1CryptoLibraryClass_1a15509972e9346c7a5e6c232f726f70c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CryptoLibrary.CryptoLibraryClass.CryptoLibraryClass</definition>
        <argsstring>(byte[] key)</argsstring>
        <name>CryptoLibraryClass</name>
        <param>
          <type>byte[]</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Initializes a new instance of the CryptoTrailClass class with the specified key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The encryption key.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when the key size is not equal to <ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d86998e9b76670fb1c5acd79e551139" kindref="member">KeySizeInBytes</ref>.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="26" column="10" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="26" bodyend="33"/>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" compoundref="CryptoLibrary_8cs" startline="20">CryptoLibrary.CryptoLibraryClass.key</references>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d86998e9b76670fb1c5acd79e551139" compoundref="CryptoLibrary_8cs" startline="12">CryptoLibrary.CryptoLibraryClass.KeySizeInBytes</references>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a7a593ae6ea289e5373f0f75f44ede6e0" compoundref="CryptoLibrary_8cs" startline="88" endline="94">CryptoLibrary.CryptoLibraryClass.HOTP</referencedby>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d7b2db00f58940797ed213a52469eaa" compoundref="CryptoLibrary_8cs" startline="42" endline="81">CryptoLibrary.CryptoLibraryClass.TransformFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCryptoLibrary_1_1CryptoLibraryClass_1a4d7b2db00f58940797ed213a52469eaa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CryptoLibrary.CryptoLibraryClass.TransformFile</definition>
        <argsstring>(string sourceFilePath, string destFilePath, int operation)</argsstring>
        <name>TransformFile</name>
        <param>
          <type>string</type>
          <declname>sourceFilePath</declname>
        </param>
        <param>
          <type>string</type>
          <declname>destFilePath</declname>
        </param>
        <param>
          <type>int</type>
          <declname>operation</declname>
        </param>
        <briefdescription>
<para>Transforms a file based on the specified operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sourceFilePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the source file.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destFilePath</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the destination file.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operation</parametername>
</parameternamelist>
<parameterdescription>
<para>The operation to perform. 0 for decryption, 1 for encryption.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If operation is 1, returns the password obtained from the SHA256 digest. Otherwise, returns 0.</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown when an invalid operation is specified.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="42" column="14" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="42" bodyend="81"/>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1a482ad934a0d20de3b79c79661fb60364" compoundref="CryptoLibrary_8cs" startline="145" endline="157">CryptoLibrary.CryptoLibraryClass.CompareHashes</references>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1a2792b9c1681f2d8905023b17e13554d3" compoundref="CryptoLibrary_8cs" startline="113" endline="117">CryptoLibrary.CryptoLibraryClass.ComputeSHA1</references>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1a9ef0da32b7cfd2aa5005a842e38867bc" compoundref="CryptoLibrary_8cs" startline="134" endline="138">CryptoLibrary.CryptoLibraryClass.ComputeSHA256</references>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1aa444cb8ae306ab76268642c1e5815653" compoundref="CryptoLibrary_8cs" startline="163" endline="172">CryptoLibrary.CryptoLibraryClass.ConvertToBinary</references>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1a1d5051a8aedc22c9d63ee7a5790b3456" compoundref="CryptoLibrary_8cs" startline="180" endline="188">CryptoLibrary.CryptoLibraryClass.CreateBuffer</references>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1a15509972e9346c7a5e6c232f726f70c5" compoundref="CryptoLibrary_8cs" startline="26" endline="33">CryptoLibrary.CryptoLibraryClass.CryptoLibraryClass</references>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1acdff87d4c2e885080f766b865ba46a20" compoundref="CryptoLibrary_8cs" startline="210" endline="220">CryptoLibrary.CryptoLibraryClass.DecryptData</references>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1adfd9dade06cc9357174a7119f864de5b" compoundref="CryptoLibrary_8cs" startline="194" endline="204">CryptoLibrary.CryptoLibraryClass.EncryptData</references>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1ab0a80fff0b79edf83761ae155b296620" compoundref="CryptoLibrary_8cs" startline="226" endline="228">CryptoLibrary.CryptoLibraryClass.GetPasswordFromDigest</references>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" compoundref="CryptoLibrary_8cs" startline="20">CryptoLibrary.CryptoLibraryClass.key</references>
      </memberdef>
      <memberdef kind="function" id="classCryptoLibrary_1_1CryptoLibraryClass_1a7a593ae6ea289e5373f0f75f44ede6e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CryptoLibrary.CryptoLibraryClass.HOTP</definition>
        <argsstring>(byte[] key, int counter)</argsstring>
        <name>HOTP</name>
        <param>
          <type>byte[]</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>counter</declname>
        </param>
        <briefdescription>
<para>Calculates the HOTP (HMAC-based One-Time Password) value based on the specified key and counter. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The HMAC key.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>counter</parametername>
</parameternamelist>
<parameterdescription>
<para>The counter value.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The calculated HOTP value.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="88" column="14" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="88" bodyend="94"/>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1a9e8c696e2fe9fc21fb67ee5ee6d241e3" compoundref="CryptoLibrary_8cs" startline="100" endline="107">CryptoLibrary.CryptoLibraryClass.CalculateDynamicTruncation</references>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1a792a8e7f81c52c1ed7f4a7fd3154b454" compoundref="CryptoLibrary_8cs" startline="124" endline="128">CryptoLibrary.CryptoLibraryClass.ComputeHMACSHA1</references>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1a15509972e9346c7a5e6c232f726f70c5" compoundref="CryptoLibrary_8cs" startline="26" endline="33">CryptoLibrary.CryptoLibraryClass.CryptoLibraryClass</references>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" compoundref="CryptoLibrary_8cs" startline="20">CryptoLibrary.CryptoLibraryClass.key</references>
      </memberdef>
      <memberdef kind="function" id="classCryptoLibrary_1_1CryptoLibraryClass_1a2792b9c1681f2d8905023b17e13554d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>byte [] CryptoLibrary.CryptoLibraryClass.ComputeSHA1</definition>
        <argsstring>(byte[] data)</argsstring>
        <name>ComputeSHA1</name>
        <param>
          <type>byte[]</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Computes the SHA-1 hash of the given data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to compute the hash for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The computed SHA-1 hash.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="113" column="15" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="113" bodyend="117"/>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d7b2db00f58940797ed213a52469eaa" compoundref="CryptoLibrary_8cs" startline="42" endline="81">CryptoLibrary.CryptoLibraryClass.TransformFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCryptoLibrary_1_1CryptoLibraryClass_1a792a8e7f81c52c1ed7f4a7fd3154b454" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>byte [] CryptoLibrary.CryptoLibraryClass.ComputeHMACSHA1</definition>
        <argsstring>(byte[] data, byte[] key)</argsstring>
        <name>ComputeHMACSHA1</name>
        <param>
          <type>byte[]</type>
          <declname>data</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Computes the HMAC-SHA1 hash of the given data using the provided key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to compute the HMAC-SHA1 hash for.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The HMAC-SHA1 key.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The computed HMAC-SHA1 hash.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="124" column="15" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="124" bodyend="128"/>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" compoundref="CryptoLibrary_8cs" startline="20">CryptoLibrary.CryptoLibraryClass.key</references>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a7a593ae6ea289e5373f0f75f44ede6e0" compoundref="CryptoLibrary_8cs" startline="88" endline="94">CryptoLibrary.CryptoLibraryClass.HOTP</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCryptoLibrary_1_1CryptoLibraryClass_1a9ef0da32b7cfd2aa5005a842e38867bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>byte [] CryptoLibrary.CryptoLibraryClass.ComputeSHA256</definition>
        <argsstring>(byte[] data)</argsstring>
        <name>ComputeSHA256</name>
        <param>
          <type>byte[]</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Computes the SHA-256 hash of the given data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to compute the hash for.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The computed SHA-256 hash.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="134" column="15" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="134" bodyend="138"/>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d7b2db00f58940797ed213a52469eaa" compoundref="CryptoLibrary_8cs" startline="42" endline="81">CryptoLibrary.CryptoLibraryClass.TransformFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCryptoLibrary_1_1CryptoLibraryClass_1a482ad934a0d20de3b79c79661fb60364" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool CryptoLibrary.CryptoLibraryClass.CompareHashes</definition>
        <argsstring>(byte[] hash1, byte[] hash2)</argsstring>
        <name>CompareHashes</name>
        <param>
          <type>byte[]</type>
          <declname>hash1</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>hash2</declname>
        </param>
        <briefdescription>
<para>Compares two hash values for equality. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hash1</parametername>
</parameternamelist>
<parameterdescription>
<para>The first hash value as a byte array.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash2</parametername>
</parameternamelist>
<parameterdescription>
<para>The second hash value as a byte array.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the hash values are equal, otherwise false.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="145" column="15" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="145" bodyend="157"/>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d7b2db00f58940797ed213a52469eaa" compoundref="CryptoLibrary_8cs" startline="42" endline="81">CryptoLibrary.CryptoLibraryClass.TransformFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCryptoLibrary_1_1CryptoLibraryClass_1adfd9dade06cc9357174a7119f864de5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>byte [] CryptoLibrary.CryptoLibraryClass.EncryptData</definition>
        <argsstring>(byte[] data)</argsstring>
        <name>EncryptData</name>
        <param>
          <type>byte[]</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Encrypts the data using AES encryption. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to be encrypted.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The encrypted data.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="194" column="15" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="194" bodyend="204"/>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" compoundref="CryptoLibrary_8cs" startline="20">CryptoLibrary.CryptoLibraryClass.key</references>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d7b2db00f58940797ed213a52469eaa" compoundref="CryptoLibrary_8cs" startline="42" endline="81">CryptoLibrary.CryptoLibraryClass.TransformFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCryptoLibrary_1_1CryptoLibraryClass_1acdff87d4c2e885080f766b865ba46a20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>byte [] CryptoLibrary.CryptoLibraryClass.DecryptData</definition>
        <argsstring>(byte[] data)</argsstring>
        <name>DecryptData</name>
        <param>
          <type>byte[]</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Decrypts the data using AES decryption. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to be decrypted.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The decrypted data.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="210" column="15" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="210" bodyend="220"/>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" compoundref="CryptoLibrary_8cs" startline="20">CryptoLibrary.CryptoLibraryClass.key</references>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d7b2db00f58940797ed213a52469eaa" compoundref="CryptoLibrary_8cs" startline="42" endline="81">CryptoLibrary.CryptoLibraryClass.TransformFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCryptoLibrary_1_1CryptoLibraryClass_1a15aa7ffe9927153c346a02b0e0e5c51c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string CryptoLibrary.CryptoLibraryClass.ByteArrayToHex</definition>
        <argsstring>(byte[] bytes)</argsstring>
        <name>ByteArrayToHex</name>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
<para>Converts a byte array to a hexadecimal string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The byte array to convert.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The hexadecimal representation of the byte array.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="234" column="17" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="234" bodyend="241"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classCryptoLibrary_1_1CryptoLibraryClass_1a9e8c696e2fe9fc21fb67ee5ee6d241e3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CryptoLibrary.CryptoLibraryClass.CalculateDynamicTruncation</definition>
        <argsstring>(byte[] hmacBytes)</argsstring>
        <name>CalculateDynamicTruncation</name>
        <param>
          <type>byte[]</type>
          <declname>hmacBytes</declname>
        </param>
        <briefdescription>
<para>Calculates the dynamic truncation value based on the provided HMAC-SHA1 hash. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hmacBytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The HMAC-SHA1 hash as a byte array.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The dynamic truncation value as an unsigned integer.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="100" column="15" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="100" bodyend="107"/>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a7a593ae6ea289e5373f0f75f44ede6e0" compoundref="CryptoLibrary_8cs" startline="88" endline="94">CryptoLibrary.CryptoLibraryClass.HOTP</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCryptoLibrary_1_1CryptoLibraryClass_1aa444cb8ae306ab76268642c1e5815653" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CryptoLibrary.CryptoLibraryClass.ConvertToBinary</definition>
        <argsstring>(string inputFile, string outputFile)</argsstring>
        <name>ConvertToBinary</name>
        <param>
          <type>string</type>
          <declname>inputFile</declname>
        </param>
        <param>
          <type>string</type>
          <declname>outputFile</declname>
        </param>
        <briefdescription>
<para>Converts the contents of the input file to binary and saves it to the output file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inputFile</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the input file.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputFile</parametername>
</parameternamelist>
<parameterdescription>
<para>The path of the output file.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="163" column="16" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="163" bodyend="172"/>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d7b2db00f58940797ed213a52469eaa" compoundref="CryptoLibrary_8cs" startline="42" endline="81">CryptoLibrary.CryptoLibraryClass.TransformFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCryptoLibrary_1_1CryptoLibraryClass_1a1d5051a8aedc22c9d63ee7a5790b3456" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>byte[]</type>
        <definition>byte [] CryptoLibrary.CryptoLibraryClass.CreateBuffer</definition>
        <argsstring>(byte[] sha1D, byte[] fileData, byte[] sha256D)</argsstring>
        <name>CreateBuffer</name>
        <param>
          <type>byte[]</type>
          <declname>sha1D</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>fileData</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>sha256D</declname>
        </param>
        <briefdescription>
<para>Creates a buffer by combining the SHA1 digest, file data, and SHA256 digest. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sha1D</parametername>
</parameternamelist>
<parameterdescription>
<para>The SHA1 digest.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fileData</parametername>
</parameternamelist>
<parameterdescription>
<para>The file data.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sha256D</parametername>
</parameternamelist>
<parameterdescription>
<para>The SHA256 digest.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The combined buffer.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="180" column="16" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="180" bodyend="188"/>
        <references refid="classCryptoLibrary_1_1CryptoLibraryClass_1aae6f67054dad08c013f826b4a72f5a64" compoundref="CryptoLibrary_8cs" startline="16">CryptoLibrary.CryptoLibraryClass.BlockSizeInBytes</references>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d7b2db00f58940797ed213a52469eaa" compoundref="CryptoLibrary_8cs" startline="42" endline="81">CryptoLibrary.CryptoLibraryClass.TransformFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCryptoLibrary_1_1CryptoLibraryClass_1ab0a80fff0b79edf83761ae155b296620" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CryptoLibrary.CryptoLibraryClass.GetPasswordFromDigest</definition>
        <argsstring>(byte[] digest)</argsstring>
        <name>GetPasswordFromDigest</name>
        <param>
          <type>byte[]</type>
          <declname>digest</declname>
        </param>
        <briefdescription>
<para>Gets the password from the SHA256 digest. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>digest</parametername>
</parameternamelist>
<parameterdescription>
<para>The SHA256 digest.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The password as an integer.</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CryptoLibrary/CryptoLibrary.cs" line="226" column="15" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="226" bodyend="228"/>
        <referencedby refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d7b2db00f58940797ed213a52469eaa" compoundref="CryptoLibrary_8cs" startline="42" endline="81">CryptoLibrary.CryptoLibraryClass.TransformFile</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for file transformation operations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CryptoLibrary/CryptoLibrary.cs" line="8" column="7" bodyfile="CryptoLibrary/CryptoLibrary.cs" bodystart="8" bodyend="242"/>
    <listofallmembers>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1aae6f67054dad08c013f826b4a72f5a64" prot="private" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>BlockSizeInBytes</name></member>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1a15aa7ffe9927153c346a02b0e0e5c51c" prot="public" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>ByteArrayToHex</name></member>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1a9e8c696e2fe9fc21fb67ee5ee6d241e3" prot="private" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>CalculateDynamicTruncation</name></member>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1a482ad934a0d20de3b79c79661fb60364" prot="public" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>CompareHashes</name></member>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1a792a8e7f81c52c1ed7f4a7fd3154b454" prot="public" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>ComputeHMACSHA1</name></member>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1a2792b9c1681f2d8905023b17e13554d3" prot="public" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>ComputeSHA1</name></member>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1a9ef0da32b7cfd2aa5005a842e38867bc" prot="public" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>ComputeSHA256</name></member>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1aa444cb8ae306ab76268642c1e5815653" prot="private" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>ConvertToBinary</name></member>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1a1d5051a8aedc22c9d63ee7a5790b3456" prot="private" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>CreateBuffer</name></member>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1a15509972e9346c7a5e6c232f726f70c5" prot="public" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>CryptoLibraryClass</name></member>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1acdff87d4c2e885080f766b865ba46a20" prot="public" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>DecryptData</name></member>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1adfd9dade06cc9357174a7119f864de5b" prot="public" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>EncryptData</name></member>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1ab0a80fff0b79edf83761ae155b296620" prot="private" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>GetPasswordFromDigest</name></member>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1a7a593ae6ea289e5373f0f75f44ede6e0" prot="public" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>HOTP</name></member>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" prot="private" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>key</name></member>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d86998e9b76670fb1c5acd79e551139" prot="private" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>KeySizeInBytes</name></member>
      <member refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d7b2db00f58940797ed213a52469eaa" prot="public" virt="non-virtual"><scope>CryptoLibrary::CryptoLibraryClass</scope><name>TransformFile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
