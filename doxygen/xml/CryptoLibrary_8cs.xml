<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="CryptoLibrary_8cs" kind="file" language="C#">
    <compoundname>CryptoLibrary.cs</compoundname>
    <innerclass refid="classCryptoLibrary_1_1CryptoLibraryClass" prot="public">CryptoLibrary::CryptoLibraryClass</innerclass>
    <innernamespace refid="namespaceCryptoLibrary">CryptoLibrary</innernamespace>
    <innernamespace refid="namespaceSystem_1_1Security_1_1Cryptography">System::Security::Cryptography</innernamespace>
    <innernamespace refid="namespaceSystem_1_1Text">System::Text</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Security.Cryptography;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Text;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="namespaceCryptoLibrary" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceCryptoLibrary" kindref="compound">CryptoLibrary</ref><sp/>{</highlight></codeline>
<codeline lineno="8" refid="classCryptoLibrary_1_1CryptoLibraryClass" refkind="compound"><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classCryptoLibrary_1_1CryptoLibraryClass" kindref="compound">CryptoLibraryClass</ref><sp/>{</highlight></codeline>
<codeline lineno="12" refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d86998e9b76670fb1c5acd79e551139" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d86998e9b76670fb1c5acd79e551139" kindref="member">KeySizeInBytes</ref><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="16" refid="classCryptoLibrary_1_1CryptoLibraryClass_1aae6f67054dad08c013f826b4a72f5a64" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1aae6f67054dad08c013f826b4a72f5a64" kindref="member">BlockSizeInBytes</ref><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="20" refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>readonly<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="26" refid="classCryptoLibrary_1_1CryptoLibraryClass_1a15509972e9346c7a5e6c232f726f70c5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a15509972e9346c7a5e6c232f726f70c5" kindref="member">CryptoLibraryClass</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" kindref="member">key</ref>)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" kindref="member">key</ref>.Length<sp/>!=<sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d86998e9b76670fb1c5acd79e551139" kindref="member">KeySizeInBytes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArgumentException($</highlight><highlight class="stringliteral">&quot;Key<sp/>size<sp/>must<sp/>be<sp/>{KeySizeInBytes}<sp/>bytes.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>this.key<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" kindref="member">key</ref>.Length];</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>Array.Copy(<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" kindref="member">key</ref>,<sp/>this.key,<sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" kindref="member">key</ref>.Length);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="42" refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d7b2db00f58940797ed213a52469eaa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a4d7b2db00f58940797ed213a52469eaa" kindref="member">TransformFile</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>sourceFilePath,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>destFilePath,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>operation)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass" kindref="compound">CryptoLibraryClass</ref><sp/>crypto<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a15509972e9346c7a5e6c232f726f70c5" kindref="member">CryptoLibraryClass</ref>(<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>newsourceFilePath<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Hello.bin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>crypto.<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1aa444cb8ae306ab76268642c1e5815653" kindref="member">ConvertToBinary</ref>(sourceFilePath,<sp/>newsourceFilePath);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operation<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>fileData<sp/>=<sp/>File.ReadAllBytes(newsourceFilePath);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>sha1D<sp/>=<sp/>crypto.<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a2792b9c1681f2d8905023b17e13554d3" kindref="member">ComputeSHA1</ref>(fileData);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>sha256D<sp/>=<sp/>crypto.<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a9ef0da32b7cfd2aa5005a842e38867bc" kindref="member">ComputeSHA256</ref>(fileData);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>buffer<sp/>=<sp/>crypto.<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a1d5051a8aedc22c9d63ee7a5790b3456" kindref="member">CreateBuffer</ref>(sha1D,<sp/>fileData,<sp/>sha256D);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>encryptedBuffer<sp/>=<sp/>crypto.<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1adfd9dade06cc9357174a7119f864de5b" kindref="member">EncryptData</ref>(buffer);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>File.WriteAllBytes(destFilePath,<sp/>encryptedBuffer);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>crypto.<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1ab0a80fff0b79edf83761ae155b296620" kindref="member">GetPasswordFromDigest</ref>(encryptedBuffer);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operation<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>encryptedBuffer<sp/>=<sp/>File.ReadAllBytes(sourceFilePath);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>decryptedData<sp/>=<sp/>crypto.<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1acdff87d4c2e885080f766b865ba46a20" kindref="member">DecryptData</ref>(encryptedBuffer);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>BitConverter.ToInt32(decryptedData,<sp/>0);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sha1D_Offset<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fileData_Offset<sp/>=<sp/>24;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sha256D_Offset<sp/>=<sp/>24<sp/>+<sp/>length;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>sha1D<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[20];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Buffer.BlockCopy(decryptedData,<sp/>sha1D_Offset,<sp/>sha1D,<sp/>0,<sp/>20);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>fileData<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[length];</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Buffer.BlockCopy(decryptedData,<sp/>fileData_Offset,<sp/>fileData,<sp/>0,<sp/>length);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>sha256D<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[32];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Buffer.BlockCopy(decryptedData,<sp/>sha256D_Offset,<sp/>sha256D,<sp/>0,<sp/>32);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>calsha1D<sp/>=<sp/>crypto.<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a2792b9c1681f2d8905023b17e13554d3" kindref="member">ComputeSHA1</ref>(fileData);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>calsha256D<sp/>=<sp/>crypto.<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a9ef0da32b7cfd2aa5005a842e38867bc" kindref="member">ComputeSHA256</ref>(fileData);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sha1Val<sp/>=<sp/>crypto.<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a482ad934a0d20de3b79c79661fb60364" kindref="member">CompareHashes</ref>(sha1D,<sp/>calsha1D);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sha256Val<sp/>=<sp/>crypto.<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a482ad934a0d20de3b79c79661fb60364" kindref="member">CompareHashes</ref>(sha256D,<sp/>calsha256D);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sha1Val<sp/>&amp;&amp;<sp/>sha256Val)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>File.WriteAllBytes(destFilePath,<sp/>fileData);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ArgumentException(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>operation<sp/>specified.<sp/>Operation<sp/>must<sp/>be<sp/>0<sp/>or<sp/>1.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88" refid="classCryptoLibrary_1_1CryptoLibraryClass_1a7a593ae6ea289e5373f0f75f44ede6e0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a7a593ae6ea289e5373f0f75f44ede6e0" kindref="member">HOTP</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" kindref="member">key</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counter)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass" kindref="compound">CryptoLibraryClass</ref><sp/>crypto<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a15509972e9346c7a5e6c232f726f70c5" kindref="member">CryptoLibraryClass</ref>(<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" kindref="member">key</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>hmacBytes<sp/>=<sp/>crypto.<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a792a8e7f81c52c1ed7f4a7fd3154b454" kindref="member">ComputeHMACSHA1</ref>(<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" kindref="member">key</ref>,<sp/>BitConverter.GetBytes(counter));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sbits<sp/>=<sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a9e8c696e2fe9fc21fb67ee5ee6d241e3" kindref="member">CalculateDynamicTruncation</ref>(hmacBytes);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hotpValue<sp/>=<sp/>(int)(sbits<sp/>%<sp/>1000000);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hotpValue;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100" refid="classCryptoLibrary_1_1CryptoLibraryClass_1a9e8c696e2fe9fc21fb67ee5ee6d241e3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a9e8c696e2fe9fc21fb67ee5ee6d241e3" kindref="member">CalculateDynamicTruncation</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>hmacBytes)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>hmacBytes[19]<sp/>&amp;<sp/>0xf;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bin_code<sp/>=<sp/>((hmacBytes[offset]<sp/>&amp;<sp/>0x7f)<sp/>&lt;&lt;<sp/>24)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((hmacBytes[offset<sp/>+<sp/>1]<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>16)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>((hmacBytes[offset<sp/>+<sp/>2]<sp/>&amp;<sp/>0xff)<sp/>&lt;&lt;<sp/>8)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>(hmacBytes[offset<sp/>+<sp/>3]<sp/>&amp;<sp/>0xff);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bin_code;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="113" refid="classCryptoLibrary_1_1CryptoLibraryClass_1a2792b9c1681f2d8905023b17e13554d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a2792b9c1681f2d8905023b17e13554d3" kindref="member">ComputeSHA1</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>(SHA1<sp/>sha1<sp/>=<sp/>SHA1.Create())<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sha1.ComputeHash(data);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="124" refid="classCryptoLibrary_1_1CryptoLibraryClass_1a792a8e7f81c52c1ed7f4a7fd3154b454" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a792a8e7f81c52c1ed7f4a7fd3154b454" kindref="member">ComputeHMACSHA1</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>data,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" kindref="member">key</ref>)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>(HMACSHA1<sp/>hmacSha1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>HMACSHA1(<ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" kindref="member">key</ref>))<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hmacSha1.ComputeHash(data);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="134" refid="classCryptoLibrary_1_1CryptoLibraryClass_1a9ef0da32b7cfd2aa5005a842e38867bc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a9ef0da32b7cfd2aa5005a842e38867bc" kindref="member">ComputeSHA256</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>(SHA256<sp/>sha256<sp/>=<sp/>SHA256.Create())<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sha256.ComputeHash(data);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145" refid="classCryptoLibrary_1_1CryptoLibraryClass_1a482ad934a0d20de3b79c79661fb60364" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a482ad934a0d20de3b79c79661fb60364" kindref="member">CompareHashes</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>hash1,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>hash2)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash1.Length<sp/>!=<sp/>hash2.Length)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>hash1.Length;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash1[i]<sp/>!=<sp/>hash2[i])<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163" refid="classCryptoLibrary_1_1CryptoLibraryClass_1aa444cb8ae306ab76268642c1e5815653" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1aa444cb8ae306ab76268642c1e5815653" kindref="member">ConvertToBinary</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>inputFile,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>outputFile)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>buffer;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>(FileStream<sp/>fileStream<sp/>=<sp/>File.OpenRead(inputFile))<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[fileStream.Length];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fileStream.Read(buffer,<sp/>0,<sp/>buffer.Length);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>(FileStream<sp/>fileStream<sp/>=<sp/>File.OpenWrite(outputFile))<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fileStream.Write(buffer,<sp/>0,<sp/>buffer.Length);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180" refid="classCryptoLibrary_1_1CryptoLibraryClass_1a1d5051a8aedc22c9d63ee7a5790b3456" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a1d5051a8aedc22c9d63ee7a5790b3456" kindref="member">CreateBuffer</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>sha1D,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>fileData,<sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>sha256D)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufferLength<sp/>=<sp/>4<sp/>+<sp/>sha1D.Length<sp/>+<sp/>fileData.Length<sp/>+<sp/>sha256D.Length<sp/>+<sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1aae6f67054dad08c013f826b4a72f5a64" kindref="member">BlockSizeInBytes</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>buffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[bufferLength];</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffer.BlockCopy(BitConverter.GetBytes(fileData.Length),<sp/>0,<sp/>buffer,<sp/>0,<sp/>4);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffer.BlockCopy(sha1D,<sp/>0,<sp/>buffer,<sp/>4,<sp/>sha1D.Length);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffer.BlockCopy(fileData,<sp/>0,<sp/>buffer,<sp/>4<sp/>+<sp/>sha1D.Length,<sp/>fileData.Length);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffer.BlockCopy(sha256D,<sp/>0,<sp/>buffer,<sp/>4<sp/>+<sp/>sha1D.Length<sp/>+<sp/>fileData.Length,<sp/>sha256D.Length);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194" refid="classCryptoLibrary_1_1CryptoLibraryClass_1adfd9dade06cc9357174a7119f864de5b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1adfd9dade06cc9357174a7119f864de5b" kindref="member">EncryptData</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>(Aes<sp/>aes<sp/>=<sp/>Aes.Create())<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aes.Key<sp/>=<sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aes.IV<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[16];</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aes.Mode<sp/>=<sp/>CipherMode.CBC;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aes.Padding<sp/>=<sp/>PaddingMode.PKCS7;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>(ICryptoTransform<sp/>encryptor<sp/>=<sp/>aes.CreateEncryptor())<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>encryptor.TransformFinalBlock(data,<sp/>0,<sp/>data.Length);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210" refid="classCryptoLibrary_1_1CryptoLibraryClass_1acdff87d4c2e885080f766b865ba46a20" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1acdff87d4c2e885080f766b865ba46a20" kindref="member">DecryptData</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>(System.Security.Cryptography.Aes<sp/>aes<sp/>=<sp/>System.Security.Cryptography.Aes.Create())<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aes.Key<sp/>=<sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a713259d30229aa85f678c8471c8526a7" kindref="member">key</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aes.IV<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[16];</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aes.Mode<sp/>=<sp/>CipherMode.CBC;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aes.Padding<sp/>=<sp/>PaddingMode.PKCS7;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>(ICryptoTransform<sp/>decryptor<sp/>=<sp/>aes.CreateDecryptor())<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decryptor.TransformFinalBlock(data,<sp/>0,<sp/>data.Length);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226" refid="classCryptoLibrary_1_1CryptoLibraryClass_1ab0a80fff0b79edf83761ae155b296620" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1ab0a80fff0b79edf83761ae155b296620" kindref="member">GetPasswordFromDigest</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>digest)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>BitConverter.ToInt32(digest,<sp/>0);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234" refid="classCryptoLibrary_1_1CryptoLibraryClass_1a15aa7ffe9927153c346a02b0e0e5c51c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="classCryptoLibrary_1_1CryptoLibraryClass_1a15aa7ffe9927153c346a02b0e0e5c51c" kindref="member">ByteArrayToHex</ref>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal">[]<sp/>bytes)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>StringBuilder<sp/>hex<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>StringBuilder(bytes.Length<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>b<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bytes)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hex.AppendFormat(</highlight><highlight class="stringliteral">&quot;{0:x2}&quot;</highlight><highlight class="normal">,<sp/>b);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hex.ToString();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="CryptoLibrary/CryptoLibrary.cs"/>
  </compounddef>
</doxygen>
